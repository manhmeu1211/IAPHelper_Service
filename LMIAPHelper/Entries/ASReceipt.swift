//
//  ASReceipt.swift
//
//  Created by Luong Manh on 4/5/20.
//  Copyright © 2022 Luong Manh. All rights reserved.
//

import Foundation

public class ASReceipt: Decodable {
    /// See app_item_id.
    public var adam_id: Float?
    
    /// Generated by App Store Connect and used by the App Store to uniquely identify the app purchased. Apps are assigned this identifier only in production. Treat this value as a 64-bit long integer.
    public var app_item_id: Float?
    
    /// The app’s version number. The app's version number corresponds to the value of CFBundleVersion (in iOS) or CFBundleShortVersionString (in macOS) in the Info.plist. In production, this value is the current version of the app on the device based on the receipt_creation_date_ms. In the sandbox, the value is always "1.0".
    public var application_version: String?
    
    /// The bundle identifier for the app to which the receipt belongs. You provide this string on App Store Connect. This corresponds to the value of CFBundleIdentifier in the Info.plist file of the app.
    public var bundle_id: String?
    
    /// A unique identifier for the app download transaction.
    public var download_id: Int?
    
    /// The time the receipt expires for apps purchased through the Volume Purchase Program, in a date-time format similar to the ISO 8601.
    public var expiration_date: Date?
    
    /// The time the receipt expires for apps purchased through the Volume Purchase Program, in UNIX epoch time format, in milliseconds. If this key is not present for apps purchased through the Volume Purchase Program, the receipt does not expire. Use this time format for processing dates.
    var expiration_date_ms: String?
    
    /// The time the receipt expires for apps purchased through the Volume Purchase Program, in the Pacific Time zone.
    var varexpiration_date_pst: String?
    
    /// An array that contains the in-app purchase receipt fields for all in-app purchase transactions.
    public var in_app: [ASReceiptInApp]?
    
    /// The version of the app that the user originally purchased. This value does not change, and corresponds to the value of CFBundleVersion (in iOS) or CFBundleShortVersionString (in macOS) in the Info.plist file of the original purchase. In the sandbox environment, the value is always "1.0".
    public var original_application_version: String?
    
    /// The time of the original app purchase, in a date-time format similar to ISO 8601.
    public var original_purchase_date: Date?
    
    /// The time of the original app purchase, in UNIX epoch time format, in milliseconds. Use this time format for processing dates.
    var original_purchase_date_ms: String?
    
    /// The time of the original app purchase, in the Pacific Time zone.
    var original_purchase_date_pst: String?
    
    /// The time the user ordered the app available for pre-order, in a date-time format similar to ISO 8601.
    public var preorder_date: Date?
    
    /// The time the user ordered the app available for pre-order, in UNIX epoch time format, in milliseconds. This field is only present if the user pre-orders the app. Use this time format for processing dates.
    var preorder_date_ms: String?

    /// The time the user ordered the app available for pre-order, in the Pacific Time zone.
    var preorder_date_pst: String?
    
    /// The time the App Store generated the receipt, in a date-time format similar to ISO 8601.
    public var receipt_creation_date: Date?
    
    /// The time the App Store generated the receipt, in UNIX epoch time format, in milliseconds. Use this time format for processing dates. This value does not change.
    var receipt_creation_date_ms: String?
    
    /// The time the App Store generated the receipt, in the Pacific Time zone.
    var receipt_creation_date_pst: String?
    
    /// The type of receipt generated. The value corresponds to the environment in which the app or VPP purchase was made.
    /// Possible values: Production, ProductionVPP, ProductionSandbox, ProductionVPPSandbox
    public var receipt_type: ReceiptType?

    /// The time the request to the verifyReceipt endpoint was processed and the response was generated, in a date-time format similar to ISO 8601.
    public var request_date: Date?
    
    /// The time the request to the verifyReceipt endpoint was processed and the response was generated, in UNIX epoch time format, in milliseconds. Use this time format for processing dates.
    var request_date_ms: String?
    
    /// The time the request to the verifyReceipt endpoint was processed and the response was generated, in the Pacific Time zone.
    var request_date_pst: String?
    
    /// An arbitrary number that identifies a revision of your app. In the sandbox, this key's value is “0”.
    public var version_external_identifier: Int?
}

extension ASReceipt {
    public var purchaseDate: Date? {
        return original_purchase_date
    }
    
    public var expiresDate: Date? {
        return expiration_date
    }
}


extension DateFormatter {
    static var LocalFormater: DateFormatter {
        let formater = DateFormatter()
        formater.dateFormat = "yyyy-MM-dd HH:mm:ss"
        formater.timeZone = TimeZone.current
        return formater
    }
    static var UTCFormater: DateFormatter {
        let formater = DateFormatter()
        formater.dateFormat = "yyyy-MM-dd HH:mm:ss VV"
        formater.timeZone = TimeZone(identifier: "UTC")
        return formater
    }
}
